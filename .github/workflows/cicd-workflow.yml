name: CICD

on:
  push:
    branches: [deploy-aws]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      
      - name: Set up Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      # Build backend image
      - name: Build backend Docker image
        run: docker build -t pxtn/h2o-backend -f ./Server/Dockerfile ./Server

      # Build frontend image
      - name: Build frontend Docker image
        run: docker build -t pxtn/h2o-frontend -f ./client/Dockerfile ./client

      # Push backend image to Docker Hub
      - name: Push backend image to Docker Hub
        run: docker push pxtn/h2o-backend:latest

      # Push frontend image to Docker Hub
      - name: Push frontend image to Docker Hub
        run: docker push pxtn/h2o-frontend:latest

  deploy:
    needs: build
    runs-on: [aws-ec2]
    steps:
      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo service docker start

      - name: Check Docker version
        run: docker --version

      - name: Create Docker network
        run: docker network create h2o-network || true

      - name: Pull backend image from Docker Hub
        run: docker pull pxtn/h2o-backend:latest

      - name: Pull frontend image from Docker Hub
        run: docker pull pxtn/h2o-frontend:latest

      - name: Delete old backend container
        run: docker rm -f h2o-backend-container || true

      - name: Delete old frontend container
        run: docker rm -f h2o-frontend-container || true

      - name: Delete old container
        run: docker rm -f h2o-app-container || true

      # Run backend container
      - name: Run backend Docker container
        run: |
          docker run -d \
          --network h2o-network \
          -p 3001:3000 \
          --name h2o-backend-container \
          -e MONGODB_URL="${{ secrets.MONGODB_URL }}" \
          -e CLIENT_URL="${{ secrets.CLIENT_URL }}" \
          -e PORT="3000" \
          -e SECRET="${{ secrets.SECRET }}" \
          -e ACCESS_TOKEN_SECRET="${{ secrets.ACCESS_TOKEN_SECRET }}" \
          -e HOST="${{ secrets.HOST }}" \
          -e SERVICE="${{ secrets.SERVICE }}" \
          -e EMAIL_PORT="${{ secrets.EMAIL_PORT }}" \
          -e SECURE="${{ secrets.SECURE }}" \
          -e USER="${{ secrets.USER }}" \
          -e PASS="${{ secrets.PASS }}" \
          -e STRIPE_SECRET_KEY="${{ secrets.STRIPE_SECRET_KEY }}" \
          pxtn/h2o-backend

      # Run frontend container
      - name: Run frontend Docker container
        run: |
          docker run -d \
          --network h2o-network \
          -p 80:80 \
          --name h2o-frontend-container \
          -e VITE_H2O_URL="http://47.129.247.9:3001/" \
          -e VITE_SECRET_KEY="${{ secrets.VITE_SECRET_KEY }}" \
          pxtn/h2o-frontend

      - name: Delete old Imges
        run: docker rmi $(docker images -f "dangling=true" -q) || true
